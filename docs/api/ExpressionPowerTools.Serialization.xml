<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExpressionPowerTools.Serialization</name>
    </assembly>
    <members>
        <member name="T:ExpressionPowerTools.Serialization.Serializer">
            <summary>
            Class for serialization and de-deserialization of <see cref="T:System.Linq.Expressions.Expression"/> trees.
            </summary>
        </member>
        <member name="F:ExpressionPowerTools.Serialization.Serializer.SerializerValue">
            <summary>
            The serializer for expressions.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializer.Serialize(System.Linq.Expressions.Expression,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serialize an expression tree.
            </summary>
            <param name="root">The root <see cref="T:System.Linq.Expressions.Expression"/>.</param>
            <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions"/>.</param>
            <returns>The serialized <see cref="T:System.Linq.Expressions.Expression"/> tree.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the <see cref="T:System.Linq.Expressions.Expression"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializer.Deserialize(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserialize to an <see cref="T:System.Linq.Expressions.Expression"/> tree.
            </summary>
            <param name="json">The json text.</param>
            <param name="options">Optional <see cref="T:System.Text.Json.JsonSerializerOptions"/>.</param>
            <returns>The deserialized <see cref="T:System.Linq.Expressions.Expression"/> or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the json is <c>null</c> or whitespace.</exception>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Overload to return a specific type.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Linq.Expressions.Expression"/> root.</typeparam>
            <param name="json">The json.</param>
            <param name="options">Optional <see cref="T:System.Text.Json.JsonSerializerOptions"/>.</param>
            <returns>The <see cref="T:System.Linq.Expressions.Expression"/> or <c>null</c>.</returns>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.BaseSerializer">
            <summary>
            Base class for serializers.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.BaseSerializer.#ctor(ExpressionPowerTools.Serialization.Signatures.IExpressionSerializer{System.Linq.Expressions.Expression,ExpressionPowerTools.Serialization.Serializers.SerializableExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.BaseSerializer"/> class with a default serializer.
            </summary>
            <param name="serializer">The default serializer.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when serializer is null.</exception>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.BaseSerializer.Serializer">
            <summary>
            Gets the default <see cref="T:ExpressionPowerTools.Serialization.Signatures.IExpressionSerializer`2"/>.
            </summary>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.Constant">
            <summary>
            Represents a <see cref="T:System.Linq.Expressions.ConstantExpression"/>.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.Constant.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.Constant"/> class.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.Constant.#ctor(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.Constant"/> class.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.ConstantExpression"/> to serialize.</param>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.Constant.ConstantType">
            <summary>
            Gets or sets the value type.
            </summary>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.Constant.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.ConstantSerializer">
            <summary>
            Serializer for <see cref="T:System.Linq.Expressions.ConstantExpression"/>.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ConstantSerializer.#ctor(ExpressionPowerTools.Serialization.Signatures.IExpressionSerializer{System.Linq.Expressions.Expression,ExpressionPowerTools.Serialization.Serializers.SerializableExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.ConstantSerializer"/> class.
            </summary>
            <param name="serializer">The serializer to use.</param>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ConstantSerializer.Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Deserialize a serializable class to an actionable <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="json">The serialized fragment.</param>
            <returns>The deserialized <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ConstantSerializer.Serialize(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Serializes the expression.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.ConstantExpression"/> to serialize.</param>
            <returns>The serializable <see cref="T:ExpressionPowerTools.Serialization.Serializers.Constant"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ConstantSerializer.ExpressionPowerTools#Serialization#Signatures#IBaseSerializer#Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Implements <see cref="T:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer"/>.
            </summary>
            <param name="json">The serialized fragment.</param>
            <returns>The <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ConstantSerializer.ExpressionPowerTools#Serialization#Signatures#IBaseSerializer#Serialize(System.Linq.Expressions.Expression)">
            <summary>
            Implements <see cref="T:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer"/>.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.Expression"/> to serialize.</param>
            <returns>The <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/>.</returns>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializer">
            <summary>
            Top-level serializer that passes work off to specific types.
            </summary>
            <remarks>
            The constructor for this class scans the assembly for serializers tagged with
            <see cref="T:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializerAttribute"/>. These are loaded based on the
            <see cref="T:System.Linq.Expressions.ExpressionType"/> they represent and stored as <see cref="T:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer"/>.
            The serializers should be accessed through the static <see cref="T:ExpressionPowerTools.Serialization.Serializer"/> class,
            which takes the serializable classes and serializes them to and from JSON.
            </remarks>
        </member>
        <member name="F:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializer.serializers">
            <summary>
            The constant serializer.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializer"/> class.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializer.Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Deserialize an <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="json">The fragment to deserialize.</param>
            <returns>The deserialized <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializer.Serialize(System.Linq.Expressions.Expression)">
            <summary>
            Serialize an <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.Expression"/> to serialize.</param>
            <returns>The serialized <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/>.</returns>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializerAttribute">
            <summary>
            Attribute to tag a serializer.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializerAttribute.#ctor(System.Linq.Expressions.ExpressionType)">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializerAttribute"/>
            class with an <see cref="T:System.Linq.Expressions.ExpressionType"/>.
            </summary>
            <param name="type">The <see cref="T:System.Linq.Expressions.ExpressionType"/> the serializer handles.</param>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.ExpressionSerializerAttribute.Type">
            <summary>
            Gets the <see cref="T:System.Linq.Expressions.ExpressionType"/> the serializer handles.
            </summary>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.NewArray">
            <summary>
            New array serialization.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.NewArray.#ctor(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.NewArray"/> class.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.NewArrayExpression"/> to parse.</param>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.NewArray.ArrayType">
            <summary>
            Gets or sets the type of the array.
            </summary>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.NewArray.Expressions">
            <summary>
            Gets or sets the list of expressions.
            </summary>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.NewArraySerializer">
            <summary>
            Serializer for <see cref="T:System.Linq.Expressions.NewArrayExpression"/>.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.NewArraySerializer.#ctor(ExpressionPowerTools.Serialization.Signatures.IExpressionSerializer{System.Linq.Expressions.Expression,ExpressionPowerTools.Serialization.Serializers.SerializableExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.NewArraySerializer"/> class with a
            base serializer for recurision.
            </summary>
            <param name="serializer">The base serializer.</param>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.NewArraySerializer.Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Deserializes a <see cref="T:System.Linq.Expressions.NewArrayExpression"/>.
            </summary>
            <param name="json">The serialized fragment.</param>
            <returns>The <see cref="T:System.Linq.Expressions.NewArrayExpression"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.NewArraySerializer.Serialize(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Serialize a <see cref="T:System.Linq.Expressions.NewArrayExpression"/> to a <see cref="T:ExpressionPowerTools.Serialization.Serializers.NewArray"/>.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.NewArrayExpression"/>.</param>
            <returns>The <see cref="T:ExpressionPowerTools.Serialization.Serializers.NewArray"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.NewArraySerializer.ExpressionPowerTools#Serialization#Signatures#IBaseSerializer#Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Explicit implementation of <see cref="T:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer"/>.
            </summary>
            <param name="json">The serialized fragment.</param>
            <returns>The deserialized <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.NewArraySerializer.ExpressionPowerTools#Serialization#Signatures#IBaseSerializer#Serialize(System.Linq.Expressions.Expression)">
            <summary>
            Explicit implementation of <see cref="T:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer"/>.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.Expression"/> to serialize.</param>
            <returns>The <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/>.</returns>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.Parameter">
            <summary>
            A serializable type for <see cref="T:System.Linq.Expressions.ParameterExpression"/>.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.Parameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.Parameter"/> class.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.Parameter.#ctor(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.Parameter"/> class.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.ParameterExpression"/> to serialize.</param>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.Parameter.ParameterType">
            <summary>
            Gets or sets the parameter type.
            </summary>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.Parameter.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.ParameterSerializer">
            <summary>
            Serializer for <see cref="T:System.Linq.Expressions.ParameterExpression"/>.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ParameterSerializer.#ctor(ExpressionPowerTools.Serialization.Signatures.IExpressionSerializer{System.Linq.Expressions.Expression,ExpressionPowerTools.Serialization.Serializers.SerializableExpression})">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.ParameterSerializer"/> class.
            </summary>
            <param name="serializer">The serializer to use.</param>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ParameterSerializer.Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Deserialize a serializable class to an actionable <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="json">The serialized fragment.</param>
            <returns>The deserialized <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ParameterSerializer.Serialize(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Serializes the expression.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.ConstantExpression"/> to serialize.</param>
            <returns>The serializable <see cref="T:ExpressionPowerTools.Serialization.Serializers.Constant"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ParameterSerializer.ExpressionPowerTools#Serialization#Signatures#IBaseSerializer#Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Implements <see cref="T:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer"/>.
            </summary>
            <param name="json">The serialized fragment.</param>
            <returns>The <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.ParameterSerializer.ExpressionPowerTools#Serialization#Signatures#IBaseSerializer#Serialize(System.Linq.Expressions.Expression)">
            <summary>
            Implements <see cref="T:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer"/>.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.Expression"/> to serialize.</param>
            <returns>The <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/>.</returns>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression">
            <summary>
            Class for serialization expressions.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.SerializableExpression.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/> class.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.SerializableExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/> class and captures
            the <see cref="T:System.Linq.Expressions.ExpressionType"/> of the <see cref="T:System.Linq.Expressions.Expression"/> passed in.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.Expression"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when expression is null.</exception>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.SerializableExpression.Type">
            <summary>
            Gets or sets the type of the expression.
            </summary>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Serializers.SerializationRoot">
            <summary>
            Root of <see cref="P:ExpressionPowerTools.Serialization.Serializers.SerializationRoot.Expression"/> tree.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.SerializationRoot.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializationRoot"/> class.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Serializers.SerializationRoot.#ctor(ExpressionPowerTools.Serialization.Serializers.SerializableExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializationRoot"/> class and sets the
            <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/> property.
            </summary>
            <param name="expression">The expression.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when expression is null.</exception>
        </member>
        <member name="P:ExpressionPowerTools.Serialization.Serializers.SerializationRoot.Expression">
            <summary>
            Gets or sets the root <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/>.
            </summary>
            <remarks>
            For deserialization, this will be a <see cref="T:System.Text.Json.JsonElement"/>.
            </remarks>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer">
            <summary>
            Non-generic interface for serializers.
            </summary>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer.Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Deserialize to an <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="json">The fragment to deserialize.</param>
            <returns>The <see cref="T:System.Linq.Expressions.Expression"/>, or <c>null</c>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Signatures.IBaseSerializer.Serialize(System.Linq.Expressions.Expression)">
            <summary>
            Serialize to a <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/>.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.Expression"/> to serialize.</param>
            <returns>The <see cref="T:ExpressionPowerTools.Serialization.Serializers.SerializableExpression"/>.</returns>
        </member>
        <member name="T:ExpressionPowerTools.Serialization.Signatures.IExpressionSerializer`2">
            <summary>
            Interface for serialization/deserialization.
            </summary>
            <typeparam name="T">The type of the expression.</typeparam>
            <typeparam name="TSerializable">The type of the serializable expression.</typeparam>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Signatures.IExpressionSerializer`2.Deserialize(System.Text.Json.JsonElement)">
            <summary>
            Deserialize an <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="json">The serialized fragment.</param>
            <returns>The deserialized <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="M:ExpressionPowerTools.Serialization.Signatures.IExpressionSerializer`2.Serialize(`0)">
            <summary>
            Serializes an <see cref="T:System.Linq.Expressions.Expression"/> to a serializable class.
            </summary>
            <param name="expression">The <see cref="T:System.Linq.Expressions.Expression"/> to serialize.</param>
            <returns>The serializeable class.</returns>
        </member>
    </members>
</doc>
